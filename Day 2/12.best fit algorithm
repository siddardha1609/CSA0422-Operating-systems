#include <stdio.h>
#include <stdbool.h>
#define NUM_BLOCKS 6
#define NUM_PROCESSES 5
int blockSize[NUM_BLOCKS] = {300,600,350,200,750,125};
int processSize[NUM_PROCESSES] = {115,500,358,200,375};
void bestFit(int blockSize[], int m, int processSize[], int n)
{
    int allocation[n],i,j;
    for (i = 0; i < n; i++)
        allocation[i] = -1;
    for (i = 0; i < n; i++)
    {
        int bestIdx = -1;
        for (j = 0; j < m; j++)
        {
            if (blockSize[j] >= processSize[i])
            {
                if (bestIdx == -1)
                    bestIdx = j;
                else if (blockSize[bestIdx] > blockSize[j])
                    bestIdx = j;
            }
        }
        if (bestIdx != -1)
        {
            allocation[i] = bestIdx;
            blockSize[bestIdx] -= processSize[i];
        }
    }
    printf("Process No.\tProcess Size\tBlock no.\n");
    for (i = 0; i < n; i++)
    {
        printf("%d\t\t%d\t\t", i + 1, processSize[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i] + 1);
        else
            printf("Not Allocated\n");
    }
}
int main()
{
    bestFit(blockSize, NUM_BLOCKS, processSize, NUM_PROCESSES);
    return 0;
}
